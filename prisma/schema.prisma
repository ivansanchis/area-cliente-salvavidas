generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(cuid())
  email              String        @unique
  password           String
  nombre             String?
  apellidos          String?
  name               String?
  role               String        @default("EMPRESA")
  accessType         String
  accessId           String
  grupoId            String?
  empresaId          String?
  dispositivoId      String?
  canViewContratos   Boolean       @default(true)
  canViewFormaciones Boolean       @default(true)
  canViewFacturas    Boolean       @default(true)
  active             Boolean       @default(true)
  lastLogin          DateTime?
  createdBy          String?
  updatedBy          String?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  empresaAsignada    String?
  grupoAsignado      String?
  activityLogs       ActivityLog[]
  createdByUser      User?         @relation("UserCreatedBy", fields: [createdBy], references: [email])
  createdUsers       User[]        @relation("UserCreatedBy")
  empresa            Empresa?      @relation(fields: [empresaId], references: [idSage])
  grupo              Grupo?        @relation(fields: [grupoId], references: [idGrupo])
}

model ActivityLog {
  id        String   @id @default(cuid())
  userId    String
  action    String
  details   String?
  ipAddress String?
  userAgent String?
  metadata  String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([action])
  @@index([createdAt])
}

model Grupo {
  id                String        @id @default(cuid())
  idGrupo           String        @unique
  nombre            String        @unique
  numeroEquipos     Int
  numeroFormaciones Int
  mrrTotal          Float
  cuotaMediaEquipo  Float
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  contratos         Contrato[]
  dispositivos      Dispositivo[]
  empresas          Empresa[]
  formaciones       Formacion[]
  users             User[]
}

model Empresa {
  id                String        @id @default(cuid())
  idSage            String        @unique
  idGrupo           String
  nombreCliente     String
  numeroEquipos     Int
  numeroFormaciones Int
  mrr               Float
  cuotaEquipo       Float
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  contratos         Contrato[]
  dispositivos      Dispositivo[]
  grupo             Grupo         @relation(fields: [idGrupo], references: [idGrupo])
  facturas          Factura[]
  formaciones       Formacion[]
  users             User[]
}

model Contrato {
  id                 String        @id @default(cuid())
  idContrato         String        @unique
  idGrupo            String
  grupoCliente       String
  estadoContrato     String
  idSage             String
  cif                String
  nombreClienteSage  String
  fechaInicio        DateTime
  fechaFinalizacion  DateTime?
  contratoSage       String
  periodoFacturacion String
  formaPago          String
  descripcion        String?
  mrr                Float
  numeroEquipos      Int
  cuotaMediaEquipo   Float
  ultimaFactura      DateTime?
  ultimoCobro        DateTime?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  empresa            Empresa       @relation(fields: [idSage], references: [idSage])
  grupo              Grupo         @relation(fields: [idGrupo], references: [idGrupo])
  dispositivos       Dispositivo[]
  facturas           Factura[]
}

model Dispositivo {
  id               String   @id @default(cuid())
  numeroSerie      String   @unique
  idContrato       String
  idSage           String
  grupoCliente     String
  nombreCliente    String
  contratoSage     String
  espacio          String
  provincia        String
  linkInforme      String?
  linkAudit        String?
  fechaInstalacion DateTime
  fechaRevision    DateTime
  edLink           String?
  altaLink         String?
  latitud          Float?
  longitud         Float?
  contratoSoslink  String?
  cancelacion      String?
  situacion        String
  idUbicacion      String?
  numeroPedido     String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  contrato         Contrato @relation(fields: [idContrato], references: [idContrato])
  empresa          Empresa  @relation(fields: [idSage], references: [idSage])
  grupo            Grupo    @relation(fields: [grupoCliente], references: [nombre])
}

model Formacion {
  id                   String   @id @default(cuid())
  idFormacion          String   @unique
  instructor           String
  estado               String
  tipoFormacion        String
  ccaa                 String
  fechaRealizacion     DateTime
  horaInicio           String
  direccion            String
  codigoPostal         String
  ciudad               String
  provincia            String
  duracionTotal        Float
  fundae               Boolean
  centro               String
  evaluacionInstructor Float?
  idCliente            String
  grupoCliente         String
  nombreClienteSage    String
  numeroPedido         String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  alumnos              Alumno[]
  empresa              Empresa  @relation(fields: [idCliente], references: [idSage])
  grupo                Grupo    @relation(fields: [grupoCliente], references: [nombre])
}

model Alumno {
  id          String    @id @default(cuid())
  idFormacion String
  nombre      String
  dni         String
  diplomaUrl  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  formacion   Formacion @relation(fields: [idFormacion], references: [idFormacion])
}

model Factura {
  id             String    @id @default(cuid())
  fechaFactura   DateTime
  numeroFactura  String    @unique
  idContratoSage String
  grupoCliente   String
  cif            String
  nombreCliente  String
  baseImponible  Float
  estado         String
  fechaCobro     DateTime?
  tipoServicio   String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  empresa        Empresa   @relation(fields: [cif], references: [idSage])
  contrato       Contrato  @relation(fields: [idContratoSage], references: [idContrato])
}

model AsesorComercial {
  id        String   @id @default(cuid())
  idSage    String   @unique
  nombre    String
  email     String
  telefono  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
